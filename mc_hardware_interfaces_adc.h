#pragma once

#include <stdint.h>

class adc_one_channel_base {
public:
    //**********************************************************************
    // Метод должен:
    // 1. Отключить ADC.
    // 2. Сконфигурировать ADC и его канал в заданный режим
    // (на один объект один канал и 1 ражим).
    // После переинициализации ADC должен остаться отключенным.
    //**********************************************************************
	virtual bool reinit ( void ) const = 0;

    //**********************************************************************
    // Методы должены включать/отключать ADC (не перетерая поля регистров).
    //**********************************************************************
	virtual void clk_enable     ( void ) const = 0;
	virtual void clk_disable	( void ) const = 0;

    //**********************************************************************
    // Метод должен инициировать новое измерение и выйти,
    // не дожидаясь его окончания.
    //**********************************************************************
	virtual bool start_continuous_conversion ( void )	const = 0;
	virtual bool stop_continuous_conversion ( void )	const = 0;

    //**********************************************************************
    // Метод получает результат измерения (если таковой доступен).
    // В противном случае сообщает о неудаче.
    //**********************************************************************
	virtual void get_measurement ( uint32_t& channel_measurement ) const = 0;
};
